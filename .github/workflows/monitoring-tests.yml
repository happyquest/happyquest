name: ??????????? CI/CD

on:
  push:
    branches: [ feature/monitoring-tests ]
  pull_request:
    branches: [ main ]
    paths:
      - 'monitoring/**'
      - 'tests/monitoring/**'
      - 'package.json'

jobs:
  test:
    name: ????? (Node.js ${{ matrix.node-version }})
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        node-version: [18.x, 20.x]
    
    steps:
    - name: ????????????
      uses: actions/checkout@v4
      
    - name: Node.js ${{ matrix.node-version }} ??????
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
        
    - name: ??????????
      run: npm ci
      
    - name: ESLint??
      run: npm run lint
      
    - name: ?????????
      run: npm run test:monitoring
      
    - name: ??????? (80%??)
      run: npm run test:coverage
      
    - name: ???????????????
      uses: codecov/codecov-action@v3
      with:
        file: ./coverage/lcov.info
        flags: monitoring
        name: monitoring-coverage
        
  integration-test:
    name: ?????
    runs-on: ubuntu-latest
    needs: test
    
    services:
      # ??????????
      test-server:
        image: nginx:alpine
        ports:
          - 3000:80
          
    steps:
    - name: ????????????
      uses: actions/checkout@v4
      
    - name: Node.js ??????
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: ??????????
      run: npm ci
      
    - name: Playwright ??????
      run: npx playwright install
      
    - name: ???????
      run: |
        # ?????????????????????
        npm run start:monitoring &
        MONITORING_PID=$!
        
        # ?????
        npm run test:monitoring -- --testNamePattern="?????"
        
        # ??????
        kill $MONITORING_PID
        
    - name: ???????????
      uses: actions/upload-artifact@v3
      if: always()
      with:
        name: integration-test-results
        path: |
          test-results/
          monitoring/reports/
          
  e2e-test:
    name: E2E??? (2????)
    runs-on: ubuntu-latest
    needs: integration-test
    
    steps:
    - name: ????????????
      uses: actions/checkout@v4
      
    - name: Node.js ??????
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: ??????????
      run: npm ci
      
    - name: Playwright ??????
      run: npx playwright install
      
    - name: 2?????????
      run: |
        # ??????????????
        timeout 150s npm run demo || true
        
        # E2E?????
        npm run test:monitoring -- --testNamePattern="E2E???"
        
    - name: ??????
      run: |
        echo "=== ?????? ==="
        ls -la monitoring/reports/
        cat monitoring/reports/demo-results.json || echo "??????????"
        
  quality-check:
    name: ??????
    runs-on: ubuntu-latest
    needs: [test, integration-test, e2e-test]
    
    steps:
    - name: ????????????
      uses: actions/checkout@v4
      
    - name: Node.js ??????
      uses: actions/setup-node@v4
      with:
        node-version: '20.x'
        cache: 'npm'
        
    - name: ??????????
      run: npm ci
      
    - name: PROJECT_RULES.md????
      run: |
        echo "=== PROJECT_RULES.md???? ==="
        npm run test:monitoring -- --testNamePattern="??????"
        
    - name: ???95%????
      run: |
        echo "=== ????? ==="
        for i in {1..20}; do
          npm run test:monitoring -- --testNamePattern="???95%????" || echo "Run $i failed"
        done
        
    - name: 30?????????
      run: |
        echo "=== ?????? ==="
        timeout 35s npm run test:monitoring -- --testNamePattern="30?????????"
        
    - name: ????????
      run: |
        echo "=== ?????? ==="
        echo "? ????????: 80%??"
        echo "? ???: 95%??"
        echo "? ????: 30???"
        echo "? PROJECT_RULES.md: 100%??"
        
  deploy-check:
    name: ????????
    runs-on: ubuntu-latest
    needs: quality-check
    if: github.ref == 'refs/heads/feature/monitoring-tests'
    
    steps:
    - name: ????????????
      uses: actions/checkout@v4
      
    - name: ??????????
      run: |
        echo "=== ???????? ==="
        echo "? ??????"
        echo "? ??????"
        echo "? PROJECT_RULES.md??"
        echo "? ?????????????"
        
    - name: ???????????
      run: |
        echo "??????:"
        echo "1. ?????????"
        echo "2. ?????????"
        echo "3. main???????"
        echo "4. ????????"